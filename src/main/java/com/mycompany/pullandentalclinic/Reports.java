/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pullandentalclinic;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.spi.DirStateFactory.Result;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Rebecca
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
        displayReports();
        GetItem();
        GetPatients();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        reportsdate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportsTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        reportspatient = new javax.swing.JComboBox<>();
        reportssave = new javax.swing.JButton();
        reportsedit = new javax.swing.JButton();
        reportsdelete = new javax.swing.JButton();
        reportsprescription = new javax.swing.JTextField();
        reportscleaning = new javax.swing.JTextField();
        reportsextraction = new javax.swing.JTextField();
        reportsrootcanal = new javax.swing.JTextField();
        reportsbraces = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        reportsdentures = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        reportsdentist = new javax.swing.JTextField();
        reportsothers = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        itemchoice1 = new java.awt.Choice();
        jLabel20 = new javax.swing.JLabel();
        itemno = new javax.swing.JTextField();
        reportsedit1 = new javax.swing.JButton();
        patname5 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Procedures");

        jLabel7.setText("Date Today");

        reportsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Patient", "Date", "Prescription", "Cleaning", "Extraction", "Root Canal", "Braces", "Dentures", "Dentist", "Others"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reportsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(reportsTable);

        jLabel14.setText("Patient");

        reportssave.setText("Save");
        reportssave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportssaveMouseClicked(evt);
            }
        });
        reportssave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportssaveActionPerformed(evt);
            }
        });

        reportsedit.setText("Edit");
        reportsedit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportseditMouseClicked(evt);
            }
        });

        reportsdelete.setText("Delete");
        reportsdelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsdeleteMouseClicked(evt);
            }
        });

        reportsprescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsprescriptionActionPerformed(evt);
            }
        });

        reportscleaning.setText("0");
        reportscleaning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportscleaningActionPerformed(evt);
            }
        });

        reportsextraction.setText("0");
        reportsextraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsextractionActionPerformed(evt);
            }
        });

        reportsrootcanal.setText("0");
        reportsrootcanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsrootcanalActionPerformed(evt);
            }
        });

        reportsbraces.setText("0");
        reportsbraces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsbracesActionPerformed(evt);
            }
        });

        jLabel6.setText("Cleaning");

        jLabel9.setText("Extraction");

        jLabel10.setText("Root Canal");

        jLabel11.setText("Braces");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Prescription");

        reportsdentures.setText("0");
        reportsdentures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsdenturesActionPerformed(evt);
            }
        });

        jLabel17.setText("Dentures");

        jLabel18.setText("Dentist");

        reportsdentist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsdentistActionPerformed(evt);
            }
        });

        reportsothers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsothersActionPerformed(evt);
            }
        });

        jLabel19.setText("Others");

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        jLabel20.setText("Item Used");

        itemno.setText("0");
        itemno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemnoActionPerformed(evt);
            }
        });

        reportsedit1.setText("Generate Report");
        reportsedit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsedit1MouseClicked(evt);
            }
        });

        patname5.setFocusable(false);
        patname5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patname5ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        jLabel21.setText("ID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel7)
                                        .addComponent(reportsdate, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                        .addComponent(reportspatient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(reportsprescription, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel21)
                                    .addComponent(patname5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(reportsdentures, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(reportsrootcanal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(reportsbraces, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(reportsextraction, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(reportscleaning, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel11)))
                                            .addComponent(jLabel18)
                                            .addComponent(reportsdentist, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel20)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(itemchoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(itemno, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(reportsothers, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(reportssave)
                                            .addGap(12, 12, 12)
                                            .addComponent(reportsedit)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(reportsdelete)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(reportsedit1))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reportscleaning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reportsextraction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reportsrootcanal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reportsbraces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reportsdentures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(reportsdentist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(28, 28, 28))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reportsothers, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(itemchoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(itemno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(patname5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportspatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportsdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(reportsprescription))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsedit1)
                    .addComponent(reportssave)
                    .addComponent(reportsedit)
                    .addComponent(reportsdelete))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Patients");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Appointments");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Staff");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Inventory");
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Dashboard");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Procedures");
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Logout");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Reports");
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("UserLogs");
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel1)
                            .addComponent(jLabel15)
                            .addComponent(jLabel22)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel8)
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addGap(20, 20, 20)
                .addComponent(jLabel15)
                .addGap(20, 20, 20)
                .addComponent(jLabel22)
                .addGap(20, 20, 20)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void reportsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsTableMouseClicked
        int selectedRow = reportsTable.getSelectedRow();
        if (selectedRow != -1) { // Ensure a row is selected
            TableModel model = reportsTable.getModel();

            // Populate the text fields with data from the selected row
            String patient = model.getValueAt(selectedRow, 1).toString();
            reportspatient.setSelectedItem(patient);
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date date = dateFormat.parse(model.getValueAt(selectedRow, 2).toString());
                reportsdate.setDate(date);
            } catch (Exception e) {
                e.printStackTrace();

            }
            reportsprescription.setText(model.getValueAt(selectedRow, 3).toString());
            reportscleaning.setText(model.getValueAt(selectedRow, 4).toString());
            reportsextraction.setText(model.getValueAt(selectedRow, 5).toString());
            reportsrootcanal.setText(model.getValueAt(selectedRow, 6).toString());
            reportsbraces.setText(model.getValueAt(selectedRow, 7).toString());
            reportsdentures.setText(model.getValueAt(selectedRow, 8).toString());
            reportsdentist.setText(model.getValueAt(selectedRow, 9).toString());
            reportsothers.setText(model.getValueAt(selectedRow, 10).toString());
        }

    }//GEN-LAST:event_reportsTableMouseClicked

    private void reportssaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportssaveMouseClicked
        if (reportspatient.getSelectedItem() == null|| reportsdate.getDate() == null|| reportsdentist.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Missing Information");
        return;
        
        } 
     
        else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
                String username = "root";
                String password = "root";

                Connection Con = DriverManager.getConnection(dbUrl, username, password);
                Statement St = Con.createStatement();

                // Get the highest repid from the database and increment it
                ResultSet rs = St.executeQuery("SELECT MAX(repid) FROM reports");
                int nextrepId = 1;
                if (rs.next()) {
                    nextrepId = rs.getInt(1) + 1;
                }

                String query = "INSERT INTO reports (repid, reppatient, repdate, repprescription, repcleaning, repextraction, reprootcanal, repbraces, repdentures, repdentist, repothers) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                String updateQuery = "UPDATE inventory SET invquantity = invquantity - ? WHERE invname = ?";
                PreparedStatement add = Con.prepareStatement(query);
                PreparedStatement update = Con.prepareStatement(updateQuery);
                add.setInt(1, nextrepId);
                add.setString(2, reportspatient.getSelectedItem().toString());
                add.setDate(3, new java.sql.Date(reportsdate.getDate().getTime()));
                add.setString(4, reportsprescription.getText());
                add.setString(5, reportscleaning.getText());
                add.setString(6, reportsextraction.getText());
                add.setString(7, reportsrootcanal.getText());
                add.setString(8, reportsbraces.getText());
                add.setString(9, reportsdentures.getText());
                add.setString(10, reportsdentist.getText());
                add.setString(11, reportsothers.getText());

                int subtractAmount = Integer.parseInt(itemno.getText());
                update.setInt(1, subtractAmount);
                update.setString(2, itemchoice1.getSelectedItem());

                add.executeUpdate();
                update.executeUpdate();
                JOptionPane.showMessageDialog(this, "Report added successfully");
                Con.close();
                displayReports();
                
                

                // Clear the fields after successful insertion
                reportspatient.setSelectedIndex(0);
                reportsdate.setDate(null);
                reportsprescription.setText("");
                reportscleaning.setText("0");
                reportsextraction.setText("0");
                reportsrootcanal.setText("0");
                reportsbraces.setText("0");
                reportsdentures.setText("0");
                reportsdentist.setText("");
                reportsothers.setText("");
                
                

                

                
         
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Patients.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_reportssaveMouseClicked

    private void reportssaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportssaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportssaveActionPerformed

    private void reportseditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportseditMouseClicked

    int selectedRow = reportsTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a report to edit.");
        return;
    }

    // Confirm if the user wants to save the changes
    int response = JOptionPane.showConfirmDialog(this, "Do you want to save changes?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (response != JOptionPane.YES_OPTION) {
        return;
    }

    // Validate input fields
    if (reportspatient.getSelectedItem() == null || reportsdate.getDate() == null || reportsdentist.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Missing Information");
        return;
    }

    try {
        // Retrieve repid from the table as a String and parse it to an Integer
        String repidString = reportsTable.getValueAt(selectedRow, 0).toString();
        int repid = Integer.parseInt(repidString);

        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        String query = "UPDATE reports SET reppatient = ?, repdate = ?, repprescription = ?, repcleaning = ?, repextraction = ?, reprootcanal = ?, repbraces = ?, repdentures = ?, repdentist = ?, repothers = ? WHERE repid = ?";
        PreparedStatement update = Con.prepareStatement(query);

        update.setString(1, reportspatient.getSelectedItem().toString());
        update.setDate(2, new java.sql.Date(reportsdate.getDate().getTime()));
        update.setString(3, reportsprescription.getText());
        update.setString(4, reportscleaning.getText());
        update.setString(5, reportsextraction.getText());
        update.setString(6, reportsrootcanal.getText());
        update.setString(7, reportsbraces.getText());
        update.setString(8, reportsdentures.getText());
        update.setString(9, reportsdentist.getText());
        update.setString(10, reportsothers.getText());
        update.setInt(11, repid);

        int updatedRows = update.executeUpdate();
        if (updatedRows > 0) {
            JOptionPane.showMessageDialog(this, "Report updated successfully");
            displayReports();

            // Clear the fields after successful update
            reportspatient.setSelectedIndex(0);
            reportsdate.setDate(null);
            reportsprescription.setText("");
            reportscleaning.setText("0");
            reportsextraction.setText("0");
            reportsrootcanal.setText("0");
            reportsbraces.setText("0");
            reportsdentures.setText("0");
            reportsdentist.setText("");
            reportsothers.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "No report updated.");
        }
        Con.close();
    } catch (HeadlessException | SQLException | ClassNotFoundException | NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_reportseditMouseClicked

    private void reportsdeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsdeleteMouseClicked

        int selectedRow = reportsTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a report to delete.");
        } else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
                String username = "root";
                String password = "root";

                Connection Con = DriverManager.getConnection(dbUrl, username, password);
                int appid = (int) reportsTable.getValueAt(selectedRow, 0);

                String query = "DELETE FROM reports WHERE repid = ?";
                PreparedStatement delete = Con.prepareStatement(query);
                delete.setInt(1, appid);

                delete.executeUpdate();
                JOptionPane.showMessageDialog(this, "Record deleted successfully");
                Con.close();
                displayReports();
            } catch (HeadlessException | SQLException | ClassNotFoundException e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_reportsdeleteMouseClicked

    private void reportsprescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsprescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsprescriptionActionPerformed

    private void reportscleaningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportscleaningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportscleaningActionPerformed

    private void reportsextractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsextractionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsextractionActionPerformed

    private void reportsrootcanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsrootcanalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsrootcanalActionPerformed

    private void reportsbracesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsbracesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsbracesActionPerformed

    private void reportsdenturesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsdenturesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsdenturesActionPerformed

    private void reportsdentistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsdentistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsdentistActionPerformed

    private void reportsothersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsothersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsothersActionPerformed

    private void itemnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemnoActionPerformed

    private void reportsedit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsedit1MouseClicked
       ProcedureReportGenerator.generateProcedureReport();
    }//GEN-LAST:event_reportsedit1MouseClicked

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
    String searchText = searchField.getText().trim();
    if (!searchText.isEmpty()) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
            String username = "root";
            String password = "root";

            Connection Con = DriverManager.getConnection(dbUrl, username, password);
            String query = "SELECT LPAD(CAST(repid AS CHAR), 3, '0') AS formatted_repid, reppatient, repdate, repprescription, repcleaning, repextraction, reprootcanal, repbraces, repdentures, repdentist, repothers FROM reports WHERE reppatient LIKE ? OR CAST(repid AS CHAR) LIKE ?";
            PreparedStatement searchStmt = Con.prepareStatement(query);
            searchStmt.setString(1, "%" + searchText + "%");
            searchStmt.setString(2, "%" + searchText + "%");

            ResultSet Rs = searchStmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) reportsTable.getModel();
            model.setRowCount(0);

            while (Rs.next()) {
                model.addRow(new Object[]{
                    Rs.getString("formatted_repid"),
                    Rs.getString("reppatient"),
                    Rs.getDate("repdate"),
                    Rs.getString("repprescription"),
                    Rs.getString("repcleaning"),
                    Rs.getString("repextraction"),
                    Rs.getString("reprootcanal"),
                    Rs.getString("repbraces"),
                    Rs.getString("repdentures"),
                    Rs.getString("repdentist"),
                    Rs.getString("repothers")
                });
            }
            Con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    } else {
        // If search text is empty, display all reports
        displayReports();
    }
    }//GEN-LAST:event_searchFieldKeyTyped

    private void patname5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patname5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patname5ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        new Patients().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        new Appointments().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        new Staff().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        new Dashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        new Reports().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
    new Inventory().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        new Records().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel25MouseClicked
    public class ProcedureReportGenerator {

        public static void generateProcedureReport() {
            String jrxmlFilePath = "C:\\Users\\Rebecca\\JaspersoftWorkspace\\MyReports\\procedure_report.jrxml";
            String outputPdfPath = "C:\\Users\\Rebecca\\Desktop\\Output\\procedure_report.pdf";

            Map<String, Object> parameters = new HashMap<>();
        // Add any parameters you need to pass to the report here

            JasperReportUtil.generateReport(jrxmlFilePath, outputPdfPath, parameters);
    }
}
    private void GetItem() {
    try {
        Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "root");
        Statement St = Con.createStatement();
        ResultSet Rs = St.executeQuery("SELECT invname FROM inventory");

        while (Rs.next()) {
           String Myitem = Rs.getString("invname");
           itemchoice1.addItem(Myitem);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
}    
   
private void GetPatients() {
    try {
        Connection Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "root");
        Statement St = Con.createStatement();
        ResultSet Rs = St.executeQuery("SELECT patname FROM patients");

        while (Rs.next()) {
            String MyPat = Rs.getString("patname");
            reportspatient.addItem(MyPat);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
}
    private void displayReports() {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        
        // Get the next available repid
        String query = "SELECT LPAD(CAST(IFNULL(MAX(CAST(repid AS SIGNED)), 0) + 1 AS CHAR), 3, '0') AS next_id FROM reports";
        PreparedStatement St = Con.prepareStatement(query);
        ResultSet Rs = St.executeQuery();
        
        String nextId = "";
        if (Rs.next()) {
            nextId = Rs.getString("next_id");
        }
        
        // Set the next ID in the patname5 text field
        patname5.setText(nextId);

        // Fetch and display the reports data
        query = "SELECT LPAD(CAST(repid AS CHAR), 3, '0') AS formatted_repid, reppatient, repdate, repprescription, repcleaning, repextraction, reprootcanal, repbraces, repdentures, repdentist, repothers FROM reports";
        St = Con.prepareStatement(query);
        Rs = St.executeQuery();

        DefaultTableModel model = (DefaultTableModel) reportsTable.getModel();
        model.setRowCount(0);

        while (Rs.next()) {
            model.addRow(new Object[]{
                Rs.getString("formatted_repid"),
                Rs.getString("reppatient"),
                Rs.getDate("repdate"),
                Rs.getString("repprescription"),
                Rs.getString("repcleaning"),
                Rs.getString("repextraction"),
                Rs.getString("reprootcanal"),
                Rs.getString("repbraces"),
                Rs.getString("repdentures"),
                Rs.getString("repdentist"),
                Rs.getString("repothers")
            });
        }
        Con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice itemchoice1;
    private javax.swing.JTextField itemno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patname5;
    private javax.swing.JTable reportsTable;
    private javax.swing.JTextField reportsbraces;
    private javax.swing.JTextField reportscleaning;
    private com.toedter.calendar.JDateChooser reportsdate;
    private javax.swing.JButton reportsdelete;
    private javax.swing.JTextField reportsdentist;
    private javax.swing.JTextField reportsdentures;
    private javax.swing.JButton reportsedit;
    private javax.swing.JButton reportsedit1;
    private javax.swing.JTextField reportsextraction;
    private javax.swing.JTextField reportsothers;
    private javax.swing.JComboBox<String> reportspatient;
    private javax.swing.JTextField reportsprescription;
    private javax.swing.JTextField reportsrootcanal;
    private javax.swing.JButton reportssave;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
