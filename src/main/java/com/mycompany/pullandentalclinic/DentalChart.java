/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pullandentalclinic;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rebecca
 */
public class DentalChart extends javax.swing.JFrame {

    /**
     * Creates new form DentalChart
     */
    public DentalChart() {
        initComponents();
        displayDentalCharts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dcpatname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dcdoctor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dcpcontact = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dcq1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        dcq2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        dcqe2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        dcq3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        dcqe3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        dcq4 = new javax.swing.JTextField();
        dcqe4 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        dcq5 = new javax.swing.JTextField();
        dcqe5 = new javax.swing.JTextField();
        dcq6 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        dcq7 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        dcqe7 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        dcq8 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        dcqe8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        dcdentist = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        dcdcontact = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        dcvisit = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        dcq9 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        dcqe9 = new javax.swing.JTextField();
        dcsave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dctable = new javax.swing.JTable();
        dcedit = new javax.swing.JButton();
        dcdelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Back to Dashboard");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        jLabel2.setText("Patient Name:");

        dcpatname.setText("Existing Patient");
        dcpatname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcpatnameActionPerformed(evt);
            }
        });

        jLabel3.setText("Medical History");

        jLabel4.setText("Name of Physician: Dr.");

        dcdoctor.setText("None");
        dcdoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcdoctorActionPerformed(evt);
            }
        });

        jLabel6.setText("Office Mobile (+63)");

        dcpcontact.setText("None");
        dcpcontact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcpcontactActionPerformed(evt);
            }
        });

        jLabel7.setText("1. Are you in good health? ");

        dcq1.setText("yes");
        dcq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcq1ActionPerformed(evt);
            }
        });

        jLabel8.setText("2. Are you currently undergoing medical treatment?");

        dcq2.setText("No");
        dcq2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcq2ActionPerformed(evt);
            }
        });

        jLabel9.setText("If yes. What condition is being treated?");

        dcqe2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcqe2ActionPerformed(evt);
            }
        });

        jLabel10.setText("3. Have you ever had serious illness or operation?");

        dcq3.setText("No");

        jLabel11.setText("If yes. What was illness or operation?");

        dcqe3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcqe3ActionPerformed(evt);
            }
        });

        jLabel12.setText("4. Have you ever been hospitalized?");

        jLabel13.setText("If yes. What was the reason?");

        dcq4.setText("No");
        dcq4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcq4ActionPerformed(evt);
            }
        });

        jLabel14.setText("5. Are you taking any medication?");

        jLabel15.setText("If yes. What medication?");

        jLabel16.setText("6. Do you smoke cigarretes or tobacco?");

        dcq5.setText("No");

        dcq6.setText("No");

        jLabel17.setText("7. Do you use alcohol or any illegal drugs?");

        dcq7.setText("No");

        jLabel18.setText("If yes. What drugs or alcohol?");

        jLabel19.setText("8. Are you allergic to any substance or food?");

        dcq8.setText("No");

        jLabel20.setText("If yes. What food or substance");

        dcqe8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcqe8ActionPerformed(evt);
            }
        });

        jLabel21.setText("Dental History");

        jLabel22.setText("Name of Dentist");

        dcdentist.setText("None");

        jLabel23.setText("Office Mobile (+63)");

        dcdcontact.setText("None");

        jLabel24.setText("Last Visit to the dentist");

        dcvisit.setText("Never");
        dcvisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcvisitActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("9. Do you have any more illness or condition that the dental clinic should be made aware of?");

        dcq9.setText("No");

        jLabel26.setText("If yes. What condition or illness?");

        dcqe9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcqe9ActionPerformed(evt);
            }
        });

        dcsave.setText("Save");
        dcsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dcsaveMouseClicked(evt);
            }
        });
        dcsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcsaveActionPerformed(evt);
            }
        });

        dctable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Patient Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dctable.setFocusable(false);
        dctable.getTableHeader().setReorderingAllowed(false);
        dctable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dctableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dctable);
        if (dctable.getColumnModel().getColumnCount() > 0) {
            dctable.getColumnModel().getColumn(0).setResizable(false);
            dctable.getColumnModel().getColumn(1).setResizable(false);
        }

        dcedit.setText("Edit");
        dcedit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dceditMouseClicked(evt);
            }
        });
        dcedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dceditActionPerformed(evt);
            }
        });

        dcdelete.setText("Delete");
        dcdelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dcdeleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcdoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcpcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dcsave)
                        .addGap(18, 18, 18)
                        .addComponent(dcedit)
                        .addGap(18, 18, 18)
                        .addComponent(dcdelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcq4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcq2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcq1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcqe4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcqe3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcqe2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(241, 241, 241)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcqe9))
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcq9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcpatname, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel23)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dcdcontact))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel22)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dcdentist, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcqe8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcq8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel15))
                                            .addComponent(jLabel14))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dcqe5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dcq5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcqe7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcq7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dcq6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(dcvisit, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcq3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dcpatname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(dcdoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(dcpcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(dcdentist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel23)
                                    .addComponent(dcdcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel24)
                                    .addComponent(dcvisit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(dcq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dcq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(dcqe2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(dcq5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(dcqe5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(dcq6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dcq3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(dcq7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(dcqe3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(dcqe7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(dcq4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(dcqe4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(dcq8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(dcqe8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(dcq9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(dcqe9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dcsave)
                    .addComponent(dcedit)
                    .addComponent(dcdelete))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        new Patients().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void dcq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcq1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcq1ActionPerformed

    private void dcqe2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcqe2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcqe2ActionPerformed

    private void dcqe9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcqe9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcqe9ActionPerformed

    private void dcpatnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcpatnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcpatnameActionPerformed

    private void dcvisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcvisitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcvisitActionPerformed

    private void dcdoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcdoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcdoctorActionPerformed

    private void dcsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dcsaveMouseClicked
                                    
    // Check if any required fields are empty
    if (dcpatname.getText().isEmpty()  
         
        ) {
        JOptionPane.showMessageDialog(this, "Missing Information");
        return;
    }
    
    String patientName = dcpatname.getText();
    Integer patId = getPatientIdByName(patientName);
    
    if (patId == null) {
        JOptionPane.showMessageDialog(this, "Patient name does not exist in the database");
        return;
    }

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        String query = "INSERT INTO dentalchart (dcID, dcpatname, dcdoctor, dcpcontact, dcdentist, dcdcontact, dcvisit, dcq1, dcq2, dcqe2, dcq3, dcqe3, dcq4, dcqe4, dcq5, dcqe5, dcq6, dcq7, dcqe7, dcq8, dcqe8, dcq9, dcqe9) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement add = Con.prepareStatement(query);
        add.setInt(1, patId);
        add.setString(2, patientName);
        add.setString(3, dcdoctor.getText());
        add.setString(4, dcpcontact.getText());
        add.setString(5, dcdentist.getText());
        add.setString(6, dcdcontact.getText());
        add.setString(7, dcvisit.getText());
        add.setString(8, dcq1.getText());
        add.setString(9, dcq2.getText());
        add.setString(10, dcqe2.getText());
        add.setString(11, dcq3.getText());
        add.setString(12, dcqe3.getText());
        add.setString(13, dcq4.getText());
        add.setString(14, dcqe4.getText());
        add.setString(15, dcq5.getText());
        add.setString(16, dcqe5.getText());
        add.setString(17, dcq6.getText());
        add.setString(18, dcq7.getText());
        add.setString(19, dcqe7.getText());
        add.setString(20, dcq8.getText());
        add.setString(21, dcqe8.getText());
        add.setString(22, dcq9.getText());
        add.setString(23, dcqe9.getText());

        add.executeUpdate();
        JOptionPane.showMessageDialog(this, "Dental chart added successfully");
        Con.close();
        
        // After successful insertion, update the table display
        displayDentalCharts();
        
        // Clear the fields after successful insertion
        dcpatname.setText("");
        dcdoctor.setText("");
        dcpcontact.setText("");
        dcdentist.setText("");
        dcdcontact.setText("");
        dcvisit.setText("");
        dcq1.setText("");
        dcq2.setText("");
        dcqe2.setText("");
        dcq3.setText("");
        dcqe3.setText("");
        dcq4.setText("");
        dcqe4.setText("");
        dcq5.setText("");
        dcqe5.setText("");
        dcq6.setText("");
        dcq7.setText("");
        dcqe7.setText("");
        dcq8.setText("");
        dcqe8.setText("");
        dcq9.setText("");
        dcqe9.setText("");

    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Patients.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_dcsaveMouseClicked

    private void dcsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcsaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcsaveActionPerformed

    private void dctableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dctableMouseClicked
    int selectedRow = dctable.getSelectedRow();
    if (selectedRow != -1) {
        DefaultTableModel model = (DefaultTableModel) dctable.getModel();

        // Retrieve dcID as a String, then convert to an Integer for querying
        String dcIDStr = (String) model.getValueAt(selectedRow, 0);
        int dcID = Integer.parseInt(dcIDStr);  // No need for zero padding here

        String query = "SELECT * FROM dentalchart WHERE dcID = ?";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
            String username = "root";
            String password = "root";

            Connection Con = DriverManager.getConnection(dbUrl, username, password);
            PreparedStatement pst = Con.prepareStatement(query);
            pst.setInt(1, dcID);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                dcpatname.setText(rs.getString("dcpatname"));
                dcdoctor.setText(rs.getString("dcdoctor"));
                dcpcontact.setText(rs.getString("dcpcontact"));
                dcdentist.setText(rs.getString("dcdentist"));
                dcdcontact.setText(rs.getString("dcdcontact"));
                dcvisit.setText(rs.getString("dcvisit"));
                dcq1.setText(rs.getString("dcq1"));
                dcq2.setText(rs.getString("dcq2"));
                dcqe2.setText(rs.getString("dcqe2"));
                dcq3.setText(rs.getString("dcq3"));
                dcqe3.setText(rs.getString("dcqe3"));
                dcq4.setText(rs.getString("dcq4"));
                dcqe4.setText(rs.getString("dcqe4"));
                dcq5.setText(rs.getString("dcq5"));
                dcqe5.setText(rs.getString("dcqe5"));
                dcq6.setText(rs.getString("dcq6"));
                dcq7.setText(rs.getString("dcq7"));
                dcqe7.setText(rs.getString("dcqe7"));
                dcq8.setText(rs.getString("dcq8"));
                dcqe8.setText(rs.getString("dcqe8"));
                dcq9.setText(rs.getString("dcq9"));
                dcqe9.setText(rs.getString("dcqe9"));
            }
            Con.close();
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_dctableMouseClicked

    private void dcqe8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcqe8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcqe8ActionPerformed

    private void dcq4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcq4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcq4ActionPerformed

    private void dcqe3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcqe3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcqe3ActionPerformed

    private void dcq2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcq2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcq2ActionPerformed

    private void dcpcontactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcpcontactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcpcontactActionPerformed

    private void dceditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dceditMouseClicked
    if (dcpatname.getText().isEmpty() || dcdoctor.getText().isEmpty() || dcpcontact.getText().isEmpty() || 
        dcdentist.getText().isEmpty() || dcdcontact.getText().isEmpty() || dcvisit.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Missing Information");
        return;
    }

    String patientName = dcpatname.getText();
    Integer patId = getPatientIdByName(patientName);

    if (patId == null) {
        JOptionPane.showMessageDialog(this, "Patient name does not exist in the database");
        return;
    }

    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        String query = "UPDATE dentalchart SET dcpatname=?, dcdoctor=?, dcpcontact=?, dcdentist=?, dcdcontact=?, dcvisit=?, dcq1=?, dcq2=?, dcqe2=?, dcq3=?, dcqe3=?, dcq4=?, dcqe4=?, dcq5=?, dcqe5=?, dcq6=?, dcq7=?, dcqe7=?, dcq8=?, dcqe8=?, dcq9=?, dcqe9=? WHERE dcID=?";
        PreparedStatement update = Con.prepareStatement(query);
        update.setString(1, patientName);
        update.setString(2, dcdoctor.getText());
        update.setString(3, dcpcontact.getText());
        update.setString(4, dcdentist.getText());
        update.setString(5, dcdcontact.getText());
        update.setString(6, dcvisit.getText());
        update.setString(7, dcq1.getText());
        update.setString(8, dcq2.getText());
        update.setString(9, dcqe2.getText());
        update.setString(10, dcq3.getText());
        update.setString(11, dcqe3.getText());
        update.setString(12, dcq4.getText());
        update.setString(13, dcqe4.getText());
        update.setString(14, dcq5.getText());
        update.setString(15, dcqe5.getText());
        update.setString(16, dcq6.getText());
        update.setString(17, dcq7.getText());
        update.setString(18, dcqe7.getText());
        update.setString(19, dcq8.getText());
        update.setString(20, dcqe8.getText());
        update.setString(21, dcq9.getText());
        update.setString(22, dcqe9.getText());
        update.setInt(23, patId);

        update.executeUpdate();
        JOptionPane.showMessageDialog(this, "Dental chart updated successfully");
        Con.close();
        
        // After successful update, update the table display
        displayDentalCharts();
        
        // Clear the fields after successful update
        dcpatname.setText("");
        dcdoctor.setText("");
        dcpcontact.setText("");
        dcdentist.setText("");
        dcdcontact.setText("");
        dcvisit.setText("");
        dcq1.setText("");
        dcq2.setText("");
        dcqe2.setText("");
        dcq3.setText("");
        dcqe3.setText("");
        dcq4.setText("");
        dcqe4.setText("");
        dcq5.setText("");
        dcqe5.setText("");
        dcq6.setText("");
        dcq7.setText("");
        dcqe7.setText("");
        dcq8.setText("");
        dcqe8.setText("");
        dcq9.setText("");
        dcqe9.setText("");

    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Patients.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_dceditMouseClicked

    private void dceditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dceditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dceditActionPerformed

    private void dcdeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dcdeleteMouseClicked
    int selectedRow = dctable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a dental chart entry to delete.");
    } else {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
            String username = "root";
            String password = "root";

            Connection Con = DriverManager.getConnection(dbUrl, username, password);

            // Get the dental chart ID from the selected row
            String dentalChartIdString = (String) dctable.getValueAt(selectedRow, 0);
            int dcID;
            try {
                dcID = Integer.parseInt(dentalChartIdString);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error: The selected dental chart ID is not a valid integer.");
                return;
            }

            String query = "UPDATE dentalchart SET is_deleted = 1 WHERE dcID = ?";
            PreparedStatement update = Con.prepareStatement(query);
            update.setInt(1, dcID);

            int rowsUpdated = update.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Dental chart entry marked as deleted successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Error: No dental chart entry was marked as deleted.");
            }
            Con.close();
            displayDentalCharts();
        } catch (HeadlessException | SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_dcdeleteMouseClicked

    
    private void displayDentalCharts() {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);

        String query = "SELECT dcID, dcpatname FROM dentalchart WHERE is_deleted = 0";
        PreparedStatement pst = Con.prepareStatement(query);
        
        ResultSet rs = pst.executeQuery();

        // Clear the table
        DefaultTableModel model = (DefaultTableModel) dctable.getModel();
        model.setRowCount(0);

        // Populate the table with data
        while (rs.next()) {
            int id = rs.getInt("dcID");
            String patientName = rs.getString("dcpatname");
            model.addRow(new Object[]{String.format("%03d", id), patientName});
        }
        
        Con.close();
    } catch (ClassNotFoundException | SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}



    
    private Integer getPatientIdByName(String patname) {
    Integer patId = null;
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String dbUrl = "jdbc:mysql://localhost:3306/pullandentalclinic?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "root";
        String password = "root";

        Connection Con = DriverManager.getConnection(dbUrl, username, password);
        String query = "SELECT patId FROM Patients WHERE patname = ?";
        PreparedStatement pst = Con.prepareStatement(query);
        pst.setString(1, patname);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            patId = rs.getInt("patId");
        }

        Con.close();
    } catch (ClassNotFoundException | SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    return patId;
}


    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DentalChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DentalChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DentalChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DentalChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DentalChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dcdcontact;
    private javax.swing.JButton dcdelete;
    private javax.swing.JTextField dcdentist;
    private javax.swing.JTextField dcdoctor;
    private javax.swing.JButton dcedit;
    private javax.swing.JTextField dcpatname;
    private javax.swing.JTextField dcpcontact;
    private javax.swing.JTextField dcq1;
    private javax.swing.JTextField dcq2;
    private javax.swing.JTextField dcq3;
    private javax.swing.JTextField dcq4;
    private javax.swing.JTextField dcq5;
    private javax.swing.JTextField dcq6;
    private javax.swing.JTextField dcq7;
    private javax.swing.JTextField dcq8;
    private javax.swing.JTextField dcq9;
    private javax.swing.JTextField dcqe2;
    private javax.swing.JTextField dcqe3;
    private javax.swing.JTextField dcqe4;
    private javax.swing.JTextField dcqe5;
    private javax.swing.JTextField dcqe7;
    private javax.swing.JTextField dcqe8;
    private javax.swing.JTextField dcqe9;
    private javax.swing.JButton dcsave;
    private javax.swing.JTable dctable;
    private javax.swing.JTextField dcvisit;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
